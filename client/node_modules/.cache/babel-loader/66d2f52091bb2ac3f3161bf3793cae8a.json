{"ast":null,"code":"import _objectSpread from \"/Users/LX/gt-ft/homework/googlebook/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/LX/gt-ft/homework/googlebook/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/LX/gt-ft/homework/googlebook/client/src/pages/Search.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\nfunction Detail(props) {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      book = _useState2[0],\n      setBook = _useState2[1]; // When this component mounts, grab the book with the _id of props.match.params.id\n  // e.g. localhost:3000/books/599dcb67f0f16317844583fc\n  // const {id} = useParams()\n  // useEffect(() => {\n  //   API.getBook(id)\n  //     .then(res => setBook(res.data))\n  //     .catch(err => console.log(err));\n  // }, [])\n\n\n  function handleInputChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    setFormObject(_objectSpread(_objectSpread({}, formObject), {}, {\n      [name]: value\n    }));\n  } // When the form is submitted, use the API.saveBook method to save the book data\n  // Then reload books from the database\n\n\n  function handleFormSubmit(event) {\n    event.preventDefault();\n\n    if (formObject.title && formObject.author) {\n      API.saveBook({\n        title: formObject.title,\n        author: formObject.author,\n        synopsis: formObject.synopsis\n      }).then(function (res) {\n        return loadBooks();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"What Books Should I Read?\")), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    onChange: handleInputChange,\n    name: \"title\",\n    placeholder: \"Title (required)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    onChange: handleInputChange,\n    name: \"author\",\n    placeholder: \"Author (required)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextArea, {\n    onChange: handleInputChange,\n    name: \"synopsis\",\n    placeholder: \"Synopsis (Optional)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormBtn, {\n    disabled: !(formObject.author && formObject.title),\n    onClick: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Submit Book\")))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, book.title, \" by \", book.author)))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-10 md-offset-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"article\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"Synopsis\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, book.synopsis)))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"\\u2190 Back to Authors\"))));\n}\n\nexport default Detail;","map":{"version":3,"sources":["/Users/LX/gt-ft/homework/googlebook/client/src/pages/Search.js"],"names":["React","useEffect","useState","Link","Col","Row","Container","Jumbotron","API","List","ListItem","Input","TextArea","FormBtn","Detail","props","book","setBook","handleInputChange","event","target","name","value","setFormObject","formObject","handleFormSubmit","preventDefault","title","author","saveBook","synopsis","then","res","loadBooks","catch","err","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\nfunction Detail(props) {\n  const [book, setBook] = useState({});\n\n  // When this component mounts, grab the book with the _id of props.match.params.id\n  // e.g. localhost:3000/books/599dcb67f0f16317844583fc\n  // const {id} = useParams()\n  // useEffect(() => {\n  //   API.getBook(id)\n  //     .then(res => setBook(res.data))\n  //     .catch(err => console.log(err));\n  // }, [])\n  function handleInputChange(event) {\n    const { name, value } = event.target;\n    setFormObject({ ...formObject, [name]: value });\n  }\n\n  // When the form is submitted, use the API.saveBook method to save the book data\n  // Then reload books from the database\n  function handleFormSubmit(event) {\n    event.preventDefault();\n    if (formObject.title && formObject.author) {\n      API.saveBook({\n        title: formObject.title,\n        author: formObject.author,\n        synopsis: formObject.synopsis,\n      })\n        .then((res) => loadBooks())\n        .catch((err) => console.log(err));\n    }\n  }\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-6\">\n          <Jumbotron>\n            <h1>What Books Should I Read?</h1>\n          </Jumbotron>\n          <form>\n            <Input\n              onChange={handleInputChange}\n              name=\"title\"\n              placeholder=\"Title (required)\"\n            />\n            <Input\n              onChange={handleInputChange}\n              name=\"author\"\n              placeholder=\"Author (required)\"\n            />\n            <TextArea\n              onChange={handleInputChange}\n              name=\"synopsis\"\n              placeholder=\"Synopsis (Optional)\"\n            />\n            <FormBtn\n              disabled={!(formObject.author && formObject.title)}\n              onClick={handleFormSubmit}\n            >\n              Submit Book\n            </FormBtn>\n          </form>\n        </Col>\n      </Row>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1>\n              {book.title} by {book.author}\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n      <Row>\n        <Col size=\"md-10 md-offset-1\">\n          <article>\n            <h1>Synopsis</h1>\n            <p>{book.synopsis}</p>\n          </article>\n        </Col>\n      </Row>\n      <Row>\n        <Col size=\"md-2\">\n          <Link to=\"/\">← Back to Authors</Link>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Detail;\n"]},"metadata":{},"sourceType":"module"}