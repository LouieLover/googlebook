{"ast":null,"code":"import _objectSpread from \"/Users/LX/gt-ft/homework/googlebook/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/LX/gt-ft/homework/googlebook/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/LX/gt-ft/homework/googlebook/client/src/pages/Search.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\nfunction Search(props) {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      books = _useState2[0],\n      setBooks = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      formObject = _useState4[0],\n      setFormObject = _useState4[1]; // When this component mounts, grab the book with the _id of props.match.params.id\n  // e.g. localhost:3000/books/599dcb67f0f16317844583fc\n  // const {id} = useParams()\n  // useEffect(() => {\n  //   API.getBook(id)\n  //     .then(res => setBook(res.data))\n  //     .catch(err => console.log(err));\n  // }, [])\n\n\n  function handleInputChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    setFormObject(_objectSpread(_objectSpread({}, formObject), {}, {\n      [name]: value\n    }));\n  } // When the form is submitted, use the API.saveBook method to save the book data\n  // Then reload books from the database\n\n\n  function handleFormSubmit(event) {\n    event.preventDefault();\n\n    if (formObject.title) {\n      API.searchBook(formObject.title).then(function (res) {\n        setBooks(res.data.items);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }\n\n  function saveBook(id) {\n    API.saveBook(id).then(function (res) {\n      return saveBook();\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"What Books Should I Read?\")), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    onChange: handleInputChange,\n    name: \"title\",\n    placeholder: \"Title (required)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormBtn, {\n    disabled: !formObject.title,\n    onClick: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"Submit Search\")))), books.map(function (book) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      size: \"md-12\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }, book.volumeInfo.title, \" by \", book.volumeInfo.authors.toString()))), /*#__PURE__*/React.createElement(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      size: \"md-10 md-offset-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"article\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, \"Synopsis\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, book.volumeInfo.description)))), /*#__PURE__*/React.createElement(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      size: \"md-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"saveBtn\", {\n      onClick: function onClick() {\n        return deleteBook(book._id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    })));\n  }));\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/LX/gt-ft/homework/googlebook/client/src/pages/Search.js"],"names":["React","useEffect","useState","Link","Col","Row","Container","Jumbotron","API","List","ListItem","Input","TextArea","FormBtn","Search","props","books","setBooks","formObject","setFormObject","handleInputChange","event","target","name","value","handleFormSubmit","preventDefault","title","searchBook","then","res","data","items","catch","err","console","log","saveBook","id","map","book","volumeInfo","authors","toString","description","deleteBook","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,oBAA/B;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,oBAAzC;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AAAA,kBACKb,QAAQ,CAAC,EAAD,CADb;AAAA;AAAA,MACdc,KADc;AAAA,MACPC,QADO;;AAAA,mBAEef,QAAQ,CAAC,EAAD,CAFvB;AAAA;AAAA,MAEdgB,UAFc;AAAA,MAEFC,aAFE,kBAIrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,WAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAAA,wBACRA,KAAK,CAACC,MADE;AAAA,QACxBC,IADwB,iBACxBA,IADwB;AAAA,QAClBC,KADkB,iBAClBA,KADkB;AAEhCL,IAAAA,aAAa,iCAAMD,UAAN;AAAkB,OAACK,IAAD,GAAQC;AAA1B,OAAb;AACD,GAfoB,CAiBrB;AACA;;;AACA,WAASC,gBAAT,CAA0BJ,KAA1B,EAAiC;AAC/BA,IAAAA,KAAK,CAACK,cAAN;;AACA,QAAIR,UAAU,CAACS,KAAf,EAAsB;AACpBnB,MAAAA,GAAG,CAACoB,UAAJ,CAAeV,UAAU,CAACS,KAA1B,EACGE,IADH,CACQ,UAACC,GAAD,EAAS;AACbb,QAAAA,QAAQ,CAACa,GAAG,CAACC,IAAJ,CAASC,KAAV,CAAR;AACD,OAHH,EAIGC,KAJH,CAIS,UAACC,GAAD;AAAA,eAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAT;AAAA,OAJT;AAKD;AACF;;AAED,WAASG,QAAT,CAAkBC,EAAlB,EAAsB;AACpB9B,IAAAA,GAAG,CAAC6B,QAAJ,CAAaC,EAAb,EACGT,IADH,CACQ,UAACC,GAAD;AAAA,aAASO,QAAQ,EAAjB;AAAA,KADR,EAEGJ,KAFH,CAES,UAACC,GAAD;AAAA,aAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAT;AAAA,KAFT;AAGD;;AAED,sBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,QAAQ,EAAEd,iBADZ;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,WAAW,EAAC,kBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME,oBAAC,OAAD;AAAS,IAAA,QAAQ,EAAE,CAACF,UAAU,CAACS,KAA/B;AAAsC,IAAA,OAAO,EAAEF,gBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBANF,CAJF,CADF,CADF,EAkBGT,KAAK,CAACuB,GAAN,CAAU,UAACC,IAAD;AAAA,wBACT,uDACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,IAAI,CAACC,UAAL,CAAgBd,KADnB,UAC8Ba,IAAI,CAACC,UAAL,CAAgBC,OAAhB,CAAwBC,QAAxB,EAD9B,CADF,CADF,CADF,eAQE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAC,mBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIH,IAAI,CAACC,UAAL,CAAgBG,WAApB,CAFF,CADF,CADF,CARF,eAgBE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAC,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAS,MAAA,OAAO,EAAE;AAAA,eAAMC,UAAU,CAACL,IAAI,CAACM,GAAN,CAAhB;AAAA,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAhBF,CADS;AAAA,GAAV,CAlBH,CADF;AA4CD;;AAED,eAAehC,MAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\nfunction Search(props) {\n  const [books, setBooks] = useState([]);\n  const [formObject, setFormObject] = useState({});\n\n  // When this component mounts, grab the book with the _id of props.match.params.id\n  // e.g. localhost:3000/books/599dcb67f0f16317844583fc\n  // const {id} = useParams()\n  // useEffect(() => {\n  //   API.getBook(id)\n  //     .then(res => setBook(res.data))\n  //     .catch(err => console.log(err));\n  // }, [])\n  function handleInputChange(event) {\n    const { name, value } = event.target;\n    setFormObject({ ...formObject, [name]: value });\n  }\n\n  // When the form is submitted, use the API.saveBook method to save the book data\n  // Then reload books from the database\n  function handleFormSubmit(event) {\n    event.preventDefault();\n    if (formObject.title) {\n      API.searchBook(formObject.title)\n        .then((res) => {\n          setBooks(res.data.items);\n        })\n        .catch((err) => console.log(err));\n    }\n  }\n\n  function saveBook(id) {\n    API.saveBook(id)\n      .then((res) => saveBook())\n      .catch((err) => console.log(err));\n  }\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1>What Books Should I Read?</h1>\n          </Jumbotron>\n          <form>\n            <Input\n              onChange={handleInputChange}\n              name=\"title\"\n              placeholder=\"Title (required)\"\n            />\n            <FormBtn disabled={!formObject.title} onClick={handleFormSubmit}>\n              Submit Search\n            </FormBtn>\n          </form>\n        </Col>\n      </Row>\n      {books.map((book) => (\n        <>\n          <Row>\n            <Col size=\"md-12\">\n              <h1>\n                {book.volumeInfo.title} by {book.volumeInfo.authors.toString()}\n              </h1>\n            </Col>\n          </Row>\n          <Row>\n            <Col size=\"md-10 md-offset-1\">\n              <article>\n                <h1>Synopsis</h1>\n                <p>{book.volumeInfo.description}</p>\n              </article>\n            </Col>\n          </Row>\n          <Row>\n            <Col size=\"md-2\"></Col>\n            <saveBtn onClick={() => deleteBook(book._id)} />\n          </Row>\n        </>\n      ))}\n    </Container>\n  );\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}